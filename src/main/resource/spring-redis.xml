<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大连接数 -->
		<property name="maxTotal" value="30" />
		<!-- 最大空闲连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 每次释放连接的最大数目 -->
		<property name="numTestsPerEvictionRun" value="1024" />
		<!-- 释放连接的扫描间隔（毫秒） -->
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<!-- 连接最小空闲时间 -->
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
		<property name="softMinEvictableIdleTimeMillis" value="10000" />
		<!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
		<property name="maxWaitMillis" value="1500" />
		<!-- 在获取连接的时候检查有效性, 默认false -->
		<property name="testOnBorrow" value="true" />
		<!-- 在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="true" />
		<!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
		<property name="blockWhenExhausted" value="false" />
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="host" value="127.0.0.1"></constructor-arg>
		<constructor-arg name="port" value="6379"></constructor-arg>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
	</bean>
	<bean id='redisDao' name='cn.edu.hhit.redisDao.RedisDao' class="cn.edu.hhit.redisDao.RedisDaoImpl"></bean>
	
	
	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
	    <property name="hostName" value="127.0.0.1" /> 
	    <property name="port" value="6379"/> 
	    <property name="poolConfig" ref="jedisPoolConfig" /> 
	    <property name="usePool" value="true"/> 
  	</bean> 
  	
  	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
	    <property name="connectionFactory"  ref="jedisConnectionFactory" />  
	    <property name="keySerializer">  
	      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>   
	    <property name="valueSerializer">  
	      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="hashKeySerializer">   
	      <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>   
	    </property>  
	    <property name="hashValueSerializer">  
	      <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>   
	    </property> 
   </bean> 
   
   <!-- someKey为设置的自增长主键的key的名字-->
	<bean id="redisAtomicLong" class="org.springframework.data.redis.support.atomic.RedisAtomicLong">
	        <constructor-arg name="redisCounter" value="someKey"></constructor-arg>
	        <constructor-arg name="factory" ref="jedisConnectionFactory"></constructor-arg>
		    <constructor-arg name="initialValue" value="1"></constructor-arg>
	</bean>
</beans>



